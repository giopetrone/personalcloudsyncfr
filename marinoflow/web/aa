diff js/Block.js /opt/jalava/jalava0.9.0beta/js/Block.js
30a31
> 
617,618d617
<  // confirm( obj.x );
< 
diff js/Connection.js /opt/jalava/jalava0.9.0beta/js/Connection.js
370d369
<   //confirm ("absolute");
500,501c499
<   this.startY = obj.startY;
<   //confirm(obj.startY);
---
>   this.startY = obj.startY;  
544c542
< Jalava._modules['Connection'] = true;
---
> Jalava._modules['Connection'] = true;
\ No newline at end of file
diff js/Diagram.js /opt/jalava/jalava0.9.0beta/js/Diagram.js
20,32c20,31
<     this.figures = new Object();
<     this.sequence = 0;
<     this.container = DOM.createElement("DIV", "container");
<     this.container.style.position = "absolute";
<     this.container.style.top = y;
<     this.container.style.left = x;
<     this.container.style.width = width;
<     this.container.style.height = height;
<     this.container.style.border = "3px solid #DDDDDD";
<     document.body.appendChild(this.container);
<     this.container.id = "container";
<     initaliseAnchors(this.container);
<     this.baseZIndex = 90;
---
>   this.figures = new Object();
>   this.sequence = 0;
>   this.container = DOM.createElement("DIV", "container");
>   this.container.style.position = "absolute";
>   this.container.style.top = y;
>   this.container.style.left = x;
>   this.container.style.width = width;
>   this.container.style.height = height;
>   document.body.appendChild(this.container);
>   this.container.id = "container";
>   initaliseAnchors(this.container);
>   this.baseZIndex = 90;
43c42
<     this.container.style.display = "none";
---
>   this.container.style.display = "none";
47c46
<     this.container.style.display = "block";
---
>   this.container.style.display = "block";
51c50
<     return this.container.innerHTML;
---
>   return this.container.innerHTML;
60,69c59,68
<     var persisted = new Object();
<     persisted.connections = new Array();
<     persisted.blocks = new Array();
<     for (fig in this.figures) {
<         if (this.figures[fig].clazz=="Block")
<             persisted.blocks.push(this.figures[fig].save());
<         else if (this.figures[fig].clazz=="Connection")
<             persisted.connections.push(this.figures[fig].save());
<     }
<     return JSON.stringify(persisted);
---
>   var persisted = new Object();
>   persisted.connections = new Array();
>   persisted.blocks = new Array();
>   for (fig in this.figures) {
>   	if (this.figures[fig].clazz=="Block")
> 	  persisted.blocks.push(this.figures[fig].save());
> 	else if (this.figures[fig].clazz=="Connection")
> 	  persisted.connections.push(this.figures[fig].save());
>   }
>   return JSON.stringify(persisted);
78,89c77,89
<     var persisted = JSON.parse(jsonString);
< 
<     for (var i=0; i<persisted.blocks.length; i++) {
<         var figure = Palette.factory.generateFigure(persisted.blocks[i]);
<         var seq = parseInt(figure.id.substring(6));
<         if (!isNaN(seq)) this.sequence = Math.max(seq, this.sequence);
<     }
<     for (var j=0; j<persisted.connections.length; j++) {
<         var figure = Palette.factory.generateFigure(persisted.connections[j]);
<         var seq = parseInt(figure.id.substring(6));
<         if (!isNaN(seq)) this.sequence = Math.max(seq, this.sequence);
<     }
---
>   var persisted = JSON.parse(jsonString);  
>  
>   for (var i=0; i<persisted.blocks.length; i++) {
>   	var figure = Palette.factory.generateFigure(persisted.blocks[i]);
> 	var seq = parseInt(figure.id.substring(6));
> 	if (!isNaN(seq)) this.sequence = Math.max(seq, this.sequence);
>   }
>   
>   for (var i=0; i<persisted.connections.length; i++) {
>   	var figure = Palette.factory.generateFigure(persisted.connections[i]);
> 	var seq = parseInt(figure.id.substring(6));
> 	if (!isNaN(seq)) this.sequence = Math.max(seq, this.sequence);
>   }
97c97
<     return "figure" + this.sequence++;
---
>   return "figure" + this.sequence++;
103,113c103,106
< Diagram.prototype.addFigure = function(figure, position) {
<     //var id = "figure" + this.sequence++;
<     this.figures[(figure.id)] = figure;
<     // DIOFFA E CHI SONO?
<     if (position == "absolute") {
<         figure.element.style.position = "absolute";
<           figure.element.style.border = "2px solid red"; // MARINO
<     }
<     // da load non era settato!!!!!
<     //  confirm (figure.id);
<     this.container.appendChild(figure.element);
---
> Diagram.prototype.addFigure = function(figure) {
>   //var id = "figure" + this.sequence++;
>   this.figures[(figure.id)] = figure;	
>   this.container.appendChild(figure.element);
120,121c113,114
<     if (figureId) return this.figures[figureId];
<     return null;
---
>   if (figureId) return this.figures[figureId];	
>   return null;
129,133c122,126
<     if (this.figures[figureId]) {
<         this.figures[figureId].dispose();
<         this.container.removeChild(this.figures[figureId].element);
<         delete this.figures[figureId];
<     }
---
>   if (this.figures[figureId]) {
>   	this.figures[figureId].dispose();
>     this.container.removeChild(this.figures[figureId].element);
>   	delete this.figures[figureId];
>   }
141,149c134,141
<     var curleft = curtop = 0;
<     if (obj.offsetParent) {
<         curleft = obj.offsetLeft
<         curtop = obj.offsetTop
<         while (obj = obj.offsetParent) {
<             if (obj==this.container) break;
<             curleft += parseInt(obj.offsetLeft);
<             curtop += parseInt(obj.offsetTop);
<         }
---
>   var curleft = curtop = 0;
>   if (obj.offsetParent) {
>     curleft = obj.offsetLeft
>     curtop = obj.offsetTop
>     while (obj = obj.offsetParent) {
> 		if (obj==this.container) break;
>       curleft += parseInt(obj.offsetLeft);
>       curtop += parseInt(obj.offsetTop);
151c143,144
<     return [curleft, curtop];
---
>   }
>   return [curleft, curtop];
158,162c151,155
<     var pos = getMousePos(evt);
<     return {
<         x: pos.x - this.container.offsetLeft,
<         y: pos.y - this.container.offsetTop
<     };
---
>   var pos = getMousePos(evt);
>   return {
>   	x: pos.x - this.container.offsetLeft,
> 	y: pos.y - this.container.offsetTop
>   };	
169,170c162,163
<     var test = DOM.getEventTarget(evt);
<     if (test && test.tagName=="TEXTAREA") return true;
---
>   var test = DOM.getEventTarget(evt);
>   if (test && test.tagName=="TEXTAREA") return true;
172c165
<     Jalava.temp_var.grabbed = DOM.getEventTarget(evt, "figure");
---
>   Jalava.temp_var.grabbed = DOM.getEventTarget(evt, "figure");
174,178c167,171
<     if (Jalava.temp_var.grabbed == null) {
<         var grabbed = DOM.getEventTarget(evt, "anchor");
<         if (grabbed == null) return Jalava.deselect(evt);
<         return Jalava.resizeStart(evt, grabbed);
<     }
---
>   if (Jalava.temp_var.grabbed == null) {
>     var grabbed = DOM.getEventTarget(evt, "anchor");
>     if (grabbed == null) return Jalava.deselect(evt);
>     return Jalava.resizeStart(evt, grabbed);
>   }
180,181c173,174
<     var fig = Jalava.diagram.getFigure(Jalava.temp_var.grabbed.id);
<     if (!fig) return false; // no figure!?
---
>   var fig = Jalava.diagram.getFigure(Jalava.temp_var.grabbed.id);
>   if (!fig) return false; // no figure!?
183,186c176,179
<     if (fig.clazz=="Connection") {
<         delete Jalava.temp_var.grabbed;
<         return false;
<     }
---
>   if (fig.clazz=="Connection") {
>   	delete Jalava.temp_var.grabbed;
>   	return false;
>   }
188,192c181,185
<     var posi = this.findPos(Jalava.temp_var.grabbed);
<     var mousePos = getMousePos(evt);
<     Jalava.temp_var.grabbedX = mousePos.x - posi[0];
<     Jalava.temp_var.grabbedY = mousePos.y - posi[1];
<     Jalava.temp_var.container = this.container;
---
>   var posi = this.findPos(Jalava.temp_var.grabbed);
>   var mousePos = getMousePos(evt);
>   Jalava.temp_var.grabbedX = mousePos.x - posi[0];
>   Jalava.temp_var.grabbedY = mousePos.y - posi[1];
>   Jalava.temp_var.container = this.container;
194,195c187,188
<     Jalava.mousemoveHandler = this.drag;
<     Jalava.mouseupHandler = this.dragEnd;
---
>   Jalava.mousemoveHandler = this.drag;
>   Jalava.mouseupHandler = this.dragEnd;
197c190
<     return false;
---
>   return false;
205,206c198,199
<     try {
<         if (isIE() && evt.button == 0) return Jalava.mouseupHandler(evt);
---
>   try {
>     if (isIE() && evt.button == 0) return Jalava.mouseupHandler(evt);
208c201
<         var mousePos = getMousePos(evt);
---
>     var mousePos = getMousePos(evt);
210,211c203,204
<         var top = (mousePos.y - Jalava.temp_var.grabbedY);
<         var left = (mousePos.x - Jalava.temp_var.grabbedX);
---
>     var top = (mousePos.y - Jalava.temp_var.grabbedY);
>     var left = (mousePos.x - Jalava.temp_var.grabbedX);
213,231c206,224
<         // prevent dragging out of the bounds of this diagram
<         var blockW = parseInt(Jalava.temp_var.grabbed.offsetWidth);
<         var blockH = parseInt(Jalava.temp_var.grabbed.offsetHeight);
<         if (top < 0) {		// top boundary
<             Jalava.temp_var.grabbed.style.top = 0;
<             top = 0;
<         }					// bottom boundary
<         else if (top > Jalava.temp_var.container.offsetHeight - blockH) {
<             top = Jalava.temp_var.container.offsetHeight - blockH;
<             Jalava.temp_var.grabbed.style.top = top;
<         }
<         if (left < 0) {		// left boundary
<             Jalava.temp_var.grabbed.style.left = 0;
<             left = 0;
<         }					// right boundary
<         else if (left > Jalava.temp_var.container.offsetWidth - blockW) {
<             left = Jalava.temp_var.container.offsetWidth - blockW;
<             Jalava.temp_var.grabbed.style.left = left;
<         }
---
>     // prevent dragging out of the bounds of this diagram    
> 	var blockW = parseInt(Jalava.temp_var.grabbed.offsetWidth);
> 	var blockH = parseInt(Jalava.temp_var.grabbed.offsetHeight);
>     if (top < 0) {		// top boundary
>       Jalava.temp_var.grabbed.style.top = 0;
>       top = 0;
>     }					// bottom boundary
> 	else if (top > Jalava.temp_var.container.offsetHeight - blockH) {
>       top = Jalava.temp_var.container.offsetHeight - blockH;		
>       Jalava.temp_var.grabbed.style.top = top;
> 	}
>     if (left < 0) {		// left boundary
>       Jalava.temp_var.grabbed.style.left = 0;
>       left = 0;
>     }					// right boundary
> 	else if (left > Jalava.temp_var.container.offsetWidth - blockW) {
>       left = Jalava.temp_var.container.offsetWidth - blockW;		
>       Jalava.temp_var.grabbed.style.left = left;
> 	}
233,234c226,227
<         var x = left + parseInt(Jalava.temp_var.grabbed.offsetWidth) / 2;
<         var y = top + parseInt(Jalava.temp_var.grabbed.offsetHeight) / 2;
---
>     var x = left + parseInt(Jalava.temp_var.grabbed.offsetWidth) / 2;
>     var y = top + parseInt(Jalava.temp_var.grabbed.offsetHeight) / 2;
236,241c229,234
<         Jalava.diagram.getFigure(Jalava.temp_var.grabbed.id).setPosition(x, y);
<     }
<     catch (e) {
<         alert(e.message); /* TODO */
<     }
<     return false;
---
>     Jalava.diagram.getFigure(Jalava.temp_var.grabbed.id).setPosition(x, y);
>   } 
>   catch (e) {
>     alert(e.message); /* TODO */
>   }
>   return false;
248,249c241,242
<     Jalava.mouseupHandler = Jalava.donothing;
<     Jalava.mousemoveHandler = Jalava.returnfalse;
---
>   Jalava.mouseupHandler = Jalava.donothing;
>   Jalava.mousemoveHandler = Jalava.returnfalse;
251,253c244,246
<     Jalava.temp_var.grabbed = null;
<     Jalava.temp_var.grabbedX = null;
<     Jalava.temp_var.grabbedY = null;
---
>   Jalava.temp_var.grabbed = null;
>   Jalava.temp_var.grabbedX = null;
>   Jalava.temp_var.grabbedY = null;
262,275c255,268
<     var val = parseInt(targetVal);
<     if (side&Diagram.TOP) {
<         val = Math.max(val, 0);
<     }
<     if (side&Diagram.BOTTOM) {
<         val = Math.min(val, this.container.offsetHeight);
<     }
<     if (side&Diagram.LEFT) {
<         val = Math.max(val, 0);
<     }
<     if (side&Diagram.RIGHT) {
<         val = Math.min(val, this.container.offsetWidth);
<     }
<     return val;
---
>   var val = parseInt(targetVal);
>   if (side&Diagram.TOP) {
>   	val = Math.max(val, 0);
>   }
>   if (side&Diagram.BOTTOM) {
>   	val = Math.min(val, this.container.offsetHeight);
>   }
>   if (side&Diagram.LEFT) {
>   	val = Math.max(val, 0);
>   }
>   if (side&Diagram.RIGHT) {
>   	val = Math.min(val, this.container.offsetWidth);
>   }
>   return val;
280c273
<     }
---
> }
287,304c280,297
<     for (var i=0; i<Diagram.NUM_ANCHORS; i++) {
<         var anchor = DOM.createElement("DIV", "anchor");
<         container.appendChild(anchor);
<         anchor.id = "anchor" + i;
<         anchor.className = "anchor";
<         var img = DOM.createElement("img", "image");
<         anchor.appendChild(img);
<         img.src = "http://marinoflow.appspot.com/img/nothing.gif";
<     }
<     for (var i=0; i<Diagram.NUM_ANCHORS; i++) {
<         var hover = DOM.createElement("DIV", "hover");
<         container.appendChild(hover);
<         hover.id = "hover" + i;
<         hover.className = "hover";
<         var img = DOM.createElement("img", "image");
<         hover.appendChild(img);
<         img.src = "http://marinoflow.appspot.com/img/nothing.gif";
<     }
---
>   for (var i=0; i<Diagram.NUM_ANCHORS; i++) {
> 	var anchor = DOM.createElement("DIV", "anchor");
> 	container.appendChild(anchor);
> 	anchor.id = "anchor" + i;
> 	anchor.className = "anchor";
> 	var img = DOM.createElement("img", "image");
> 	anchor.appendChild(img);
> 	img.src = "./img/nothing.gif";
>   }	
>   for (var i=0; i<Diagram.NUM_ANCHORS; i++) {
> 	var hover = DOM.createElement("DIV", "hover");
> 	container.appendChild(hover);
> 	hover.id = "hover" + i;
> 	hover.className = "hover";
> 	var img = DOM.createElement("img", "image");
> 	hover.appendChild(img);
> 	img.src = "./img/nothing.gif";
>   }	
diff js/DirectedConnection.js /opt/jalava/jalava0.9.0beta/js/DirectedConnection.js
25c25
< DirectedConnection.IMAGEPATH = "http://marinoflow.appspot.com/img/Connection/";
---
> DirectedConnection.IMAGEPATH = "./img/Connection/";
386c386
< Jalava._modules['DirectedConnection'] = true;
---
> Jalava._modules['DirectedConnection'] = true;
\ No newline at end of file
diff js/FlowChartPaletteFactory.js /opt/jalava/jalava0.9.0beta/js/FlowChartPaletteFactory.js
15d14
<  // confirm("CREO CONTENUTO");
21,29d19
< //confirm(objId);
<   var img = new Image();
< 	img.src = "http://marinoflow.appspot.com/img/" + objId + ".gif";
<        // img.src = "./demo/african/Zebra32.gif";
< 	img.style.width = "32px";
< 	img.style.height = "32px";
< 	img.style.verticalAlign = "middle";
< 	//ele.appendChild(img);
< 
43c33
<   this.templates[objId] = UrlGradientBlock.prototype.generateTemplate(ele, null, null, 100, 50, null, "http://marinoflow.appspot.com/img/flowchart/" + objId + "_f0f0f0_w100h50.gif"); 	
---
>   this.templates[objId] = UrlGradientBlock.prototype.generateTemplate(ele, null, null, 100, 50, null, "./img/flowchart/" + objId + "_f0f0f0_w100h50.gif"); 	
49c39
< 
---
>  
53,78c43
< 
<   if (x<0 || y<0) return;
< 
<   var anchors  = this.generateAnchors(objId, 100, 50);
< 
<   var ele = this.createContent(objId, true);
<   if (!ele) return;
< //confirm("sonoin dropdi flow");
<   var block = new UrlGradientBlock(ele, x+50, y+25, 100, 50, anchors, null, objId, "#f0f0f0");
<   Jalava.diagram.addFigure(block);	// 301208: manually add block to diagram
< //Jalava.diagram.addFigure(ele);
< block.setBorderStyle("none");
<   if (Jalava.propertyPage)
<     block.addPropertyChangeListener(Jalava.propertyPage);
<   Jalava.deselect();
<   Jalava.temp_var.selected = block;
<   block.select();
<   return block;
< }
< 
< FlowChartPaletteFactory.prototype.dropTargetSAVE = function(evt, objId, left, top) {
< 
<   // try and determine the drop location
<   var x = left - Jalava.diagram.container.offsetLeft;
<   var y = top - Jalava.diagram.container.offsetTop;
< 
---
>   
80c45
< 
---
>   
82c47
< 
---
>      
85c50
< 
---
>   
95c60
< 
---
>    
diff js/GradientBlock.js /opt/jalava/jalava0.9.0beta/js/GradientBlock.js
16,17c16
<   return "http://marinoflow.appspot.com/img/" + id + "/" + id + "_" + GradientBlock.getColorIndex(color) + "_w400h200.gif";
<  
---
>   return "./img/" + id + "/" + id + "_" + GradientBlock.getColorIndex(color) + "_w400h200.gif";
71c70
< Jalava._modules['GradientBlock'] = true;
---
> Jalava._modules['GradientBlock'] = true;
\ No newline at end of file
diff js/Jalava.js /opt/jalava/jalava0.9.0beta/js/Jalava.js
45,46c45
< //    script.src = './js/' + scriptname + '.js';
<   script.src = 'http://marinoflow.appspot.com/js/' + scriptname + '.js';
---
>     script.src = './js/' + scriptname + '.js';
77c76
<     img.src = 'http://marinoflow.appspot.com/img/roller.gif';
---
>     img.src = './img/roller.gif';
diff js/NumberInput.js /opt/jalava/jalava0.9.0beta/js/NumberInput.js
49c49
<   image.src = "http://marinoflow.appspot.com/img/up.gif";
---
>   image.src = "img/up.gif";
55c55
<   image.src = "http://marinoflow.appspot.com/img/down.gif";
---
>   image.src = "img/down.gif";
diff js/PaletteFactory.js /opt/jalava/jalava0.9.0beta/js/PaletteFactory.js
164c164
<   this.templates[objId] = GradientBlock.prototype.generateTemplate(ele, null, null, 100, 50, null, "http://marinoflow.appspot.com/img/rect/rect_template.gif"); 	
---
>   this.templates[objId] = GradientBlock.prototype.generateTemplate(ele, null, null, 100, 50, null, "./img/rect/rect_template.gif"); 	
209c209
<   //  var block = new GradientBlock(null, obj.x, obj.y, obj.width, obj.height, anchors, null, "rect", "transparent");
---
>     //var block = new GradientBlock(null, obj.x, obj.y, obj.width, obj.height, anchors, null, "rect", "transparent");
212,213c212,214
<    
< 
---
>     
> 	//alert("block" + block.element.innerHTML);
> 	
216,217d216
<   //  confirm("generate span trovato? "+ span);
<  // span.className = "editable"; // ?????
226,228c225
< 	Jalava.diagram.addFigure(block,"absolute");
<         //	alert("block " + block.x);
< 	
---
> 	Jalava.diagram.addFigure(block);
235,236c232
<      //   alert(" conn " +conn);
< 	Jalava.diagram.addFigure(conn,"default");
---
> 	Jalava.diagram.addFigure(conn);
diff js/Palette.js /opt/jalava/jalava0.9.0beta/js/Palette.js
154,155c154
<       // se commento next line tempalte spostato in alto ma non sparisce!!
<         template.style.display = "none";
---
>     template.style.display = "none";
Only in js: .svn
diff js/TextEdit.js /opt/jalava/jalava0.9.0beta/js/TextEdit.js
12,27d11
<    
< 
< try {
<   TextEdit.target = DOM.getEventTarget(event, "mytextarea");
<  
<  // TextEdit.target.style.border = "5px solid red";
<   var comments = document.getElementById('comments');
<   comments.value = TextEdit.target.innerHTML;
<  
<   } catch (e) {
<   	alert(e.message);
<   }
<  // confirm("dopo invoke edit");
< }
< 
< TextEdit.invokeOrig = function(event) {
30d13
< 
35d17
< 
57c39
<   TextEdit.frame.src = 'http://marinoflow.appspot.com/mce.html';
---
>   TextEdit.frame.src = './mce.html';
86c68
<   TextEdit.frame.src = 'http://marinoflow.appspot.com/blank.html';
---
>   TextEdit.frame.src = './blank.html';
92c74
<   TextEdit.frame.src = "http://marinoflow.appspot.com/blank.html";
---
>   TextEdit.frame.src = "./blank.html";
Common subdirectories: js/tiny_mce and /opt/jalava/jalava0.9.0beta/js/tiny_mce
diff js/UrlGradientBlock.js /opt/jalava/jalava0.9.0beta/js/UrlGradientBlock.js
7,8c7
<  
<  UrlGradientBlock.parent.call(this, content, x, y, width, height, anchors, type, imageId, color);
---
>   UrlGradientBlock.parent.call(this, content, x, y, width, height, anchors, type, imageId, color);
15c14
<   if (color=="transparent") return "";
---
>   if (color=="transparent") return ""; 	
17,20c16
<  // confirm("ciao");
<  // return "./img/"+id +".gif";
<   return "http://marinoflow.appspot.com/img/flowchart/" + id + "_f0f0f0_w100h50.gif" // MAR restituisci immagine corretta nonsempre rettangolo
<  // return "./genimage/gen.php?id=" + id +"&c=" + color + "&w=" + width + "&h=" + height;
---
>   return "./genimage/gen.php?id=" + id +"&c=" + color + "&w=" + width + "&h=" + height;
